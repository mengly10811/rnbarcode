buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["Barcode_kotlinVersion"]

  repositories {
    maven {url 'https://maven.aliyun.com/repository/google'}
    maven {url 'https://maven.aliyun.com/repository/jcenter'}
    maven {url 'https://maven.aliyun.com/repository/central'}
    maven {url 'https://maven.aliyun.com/repository/public/'}
    
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"


def appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["Barcode_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["Barcode_" + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

}

repositories {
  maven {url 'https://maven.aliyun.com/repository/google'}
  maven {url 'https://maven.aliyun.com/repository/jcenter'}
  maven {url 'https://maven.aliyun.com/repository/central'}
  maven {url 'https://maven.aliyun.com/repository/public/'}
  
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:0.68.2"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-guava:1.5.2"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

  implementation "androidx.camera:camera-core:1.2.2"
  implementation "androidx.camera:camera-camera2:1.2.2"
  implementation "androidx.camera:camera-lifecycle:1.2.2"
  implementation "androidx.camera:camera-video:1.2.2"
  implementation "androidx.camera:camera-view:1.2.2"
  implementation "androidx.camera:camera-extensions:1.2.2"
  implementation "androidx.camera:camera-mlkit-vision:1.2.0-beta02"
  implementation "com.google.mlkit:barcode-scanning:17.1.0"

}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "BarcodeView"
    codegenJavaPackageName = "com.barcode"
  }
}
